* docker-g5k

This is the first attempt to use Docker for provisioning experiments in Grid'50000.
The idea is to run Docker images as natively and as transparently as possible.
This repository will serve as well as a way to document all the experiences of making
certain types of software stacks deployable with Docker.

The workflow is composed of a special base image which boots with [[http://kadeploy3.gforge.inria.fr/][Kadeploy]].
This image has  =docker= installed and it is configured to listen SSH connections over port 4444.
This is for leaving each Docker container have its own SSH daemon running and
be directly accessible using the hostname of the machine.

This repository will contain:

- Deployment scripts to setup docker images on Grid'5000 nodes (in progress ...)

- Dockerfiles that were successfully deployed on Grid'5000 (in progress ...)

* Workflow

Currently, the workflow is composed of manual steps.
First you have to deploy with a special Kadeploy image:

#+BEGIN_SRC
kadeploy3 -f $OAR_NODEFILE -k -a http://public.lyon.grid5000.fr/~cruizsanabria/jessie-docker.yaml
#+END_SRC

For logging in into the machine, you have to use the port 4444:

#+BEGIN_SRC
ssh -p 4444 root@$MACHINE
#+END_SRC

Then, you use Docker for running the desired container.
In order to make a Docker container run as closer to machine performance and privileges as possible,
we have to add special options to =docker run=:

- =--net=host= It will inherit the host network namespace, so we will have access to all network devices
               natively
- =--privileged= It will enable to access all devices on the host. Additionally,
                 special directories such as =/sys/= will be mounted =rw= if passed using volumes

- =-v /sys:/sys= It will mount 'sys' file system (Optional)

- =-v /lib/modules:lib/modules=  It will enable to load modules inside the container (Optional)

For more details take a look to the next section
* Dockerfiles




- Distem: [[./distem/index.org][Description]], [[./distem/Dockerfile][Dockerfile]]
